I"_<h2 id="logging">logging</h2>

<h3 id="dimensionado-de-gráficas">Dimensionado de gráficas</h3>

<pre><code class="language-cmd">simscape.logging.
sscexplore
sscprintzcs
simscape.logging.plot({simlog1.TS.x simlog2.TS.x},'names',{'Run1' 'Run2'});
</code></pre>
<h3 id="comandos-para-lanzar-simulaciones">Comandos para lanzar simulaciones</h3>

<pre><code class="language-cmd">set_param(mdl,'SimulationCommand','Start')
set_param(mdl,'SimulationCommand','Stop')
set_param(mdl,'SimulationCommand','Pause')
set_param('vdp','SimulationCommand','continue')
set_param('vdp','SimulationCommand','update')
set_param('my_model','StartFcn','openscopes')
</code></pre>

<p>buscar dentro de un bloque</p>
<pre><code class="language-cmd">'SaveFinalState'
'SaveOperatingPoint'    
'SaveOutput'         
'SaveState'          
'SaveTime'    
</code></pre>

<pre><code class="language-cmd">whos("-file",activeConfigObj)%noOK
</code></pre>

<p>encontrando los valores de los bloques</p>

<pre><code class="language-cmd">% Type de block
BlockPaths = find_system(mdl,'Type','Block')


formatSpec = ' Name is %s  &amp; number is %i \n';
% display name of blocks
for idx=1:1:length(BlockPaths)
    fprintf(formatSpec,BlockPaths{idx}, idx)
end
% display values

for idx=1:1:length(BlockPaths)
    fprintf('%s',BlockPaths{idx})
    BlockDialogParameters = get_param(BlockPaths{idx},'DialogParameters')
    BlockTypes = get_param(BlockPaths{idx},'BlockType')
end

%% obtener lista de los parametros -- cuadro de dialogo
BlckDialPars13 =get_param(BlockPaths{13},'DialogParameters');
%BlockDialogParameters = get_param('A0_FuelCell_240109model_FMU/FuelCellStack','DialogParameters')


NamesDialPars13 =fieldnames(BlckDialPars13)

for idx=1:1:length(NamesDialPars13)
    fprintf('%s \t %s \n',NamesDialPars13{idx}, get_param(BlockPaths{13},NamesDialPars13{idx}))
end
</code></pre>

<h2 id="parametros-del-sim-solver-de-matlab">Parametros del sim solver de matlab</h2>

<pre><code class="language-cmd">simOut = sim('vdp','SimulationMode','normal',...
            'SaveState','on','StateSaveName','xout',...
            'SaveOutput','on','OutputSaveName','yout',...
            'SaveFormat', 'Dataset');
outputs = simOut.yout
</code></pre>

<h2 id="logging-1">logging</h2>

<pre><code class="language-cmd">simscape.logging.
sscexplore
sscprintzcs
simscape.logging.plot({simlog1.TS.x simlog2.TS.x},'names',{'Run1' 'Run2'});
</code></pre>

<h2 id="obtener-los-datos-de-un-archivo-mat">obtener los datos de un archivo *.mat</h2>

<pre><code class="language-cmd">% Type de block
BlockPaths = find_system(mdl,'Type','Block')


formatSpec = ' Name is %s  &amp; number is %i \n';
% display name of blocks
for idx=1:1:length(BlockPaths)
    fprintf(formatSpec,BlockPaths{idx}, idx)
end

% display values

for idx=1:1:length(BlockPaths)
    fprintf('%s',BlockPaths{idx})
    BlockDialogParameters = get_param(BlockPaths{idx},'DialogParameters')
    BlockTypes = get_param(BlockPaths{idx},'BlockType')
end

%% obtener lista de los parametros -- cuadro de dialogo
BlckDialPars13 =get_param(BlockPaths{13},'DialogParameters');
%BlockDialogParameters = get_param('A0_FuelCell_240109model_FMU/FuelCellStack','DialogParameters')


NamesDialPars13 =fieldnames(BlckDialPars13)

for idx=1:1:length(NamesDialPars13)
    fprintf('%s \t %s \n',NamesDialPars13{idx}, get_param(BlockPaths{13},NamesDialPars13{idx}))
end
</code></pre>

<h2 id="comandos-para-lanzar-simulaciones-1">comandos para lanzar simulaciones</h2>

<pre><code class="language-cmd">% set_param(mdl,'SimulationCommand','Start')
set_param(mdl,'SimulationCommand','Stop')
set_param(mdl,'SimulationCommand','Pause')
set_param('vdp','SimulationCommand','continue')
set_param('vdp','SimulationCommand','update')
set_param('my_model','StartFcn','openscopes')
</code></pre>

<h2 id="apps-_-model-linearizer">apps _&gt; Model Linearizer.</h2>

<p>steady state manager</p>

<p>Find the operating point that meets these specifications.</p>

<pre><code class="language-cmd">op = findop(mdl,opspec);
</code></pre>
<h2 id="open--run-simulation-commands">Open &amp; run simulation commands</h2>

<p>load &amp; open Model</p>
<pre><code class="language-cmd">mdl='B0_ee_fuel_cell_iv_ch';
open_system(strcat(mdl,'.slx'))
load_system(strcat(mdl,'.slx'))
</code></pre>

<h2 id="get-general-parameters-of-configuration-model">get general parameters of configuration model</h2>

<pre><code class="language-cmd">% Get Root Parameter Names

RootParameterNames = fieldnames(get_param(0,'ObjectParameters'));
%ModelParameterNames = fieldnames(get_param(mdl,'ObjectParameters'));

ModelParameterNames = fieldnames(get_param(mdl,'ObjectParameters'));
GlobalParameterNames = setdiff(RootParameterNames,ModelParameterNames)

% open dialog of configurarion parameters
myConfigObj = getActiveConfigSet(gcs);
%  openDialog(myConfigObj);
activeConfigObj = getActiveConfigSet(mdl);

fieldnames(get_param(activeConfigObj,'ObjectParameters'))

% working OK
get_param(activeConfigObj,'StopTime')
get_param(activeConfigObj,'SolverType')
get_param(activeConfigObj,'SolverName')
get_param(activeConfigObj,'FixedStep')
get_param(activeConfigObj,'LoadInitialState')
get_param(activeConfigObj,'SaveFinalState')

get_param(activeConfigObj,'SignalLoggingName') %logsout_eeFCchars
get_param(activeConfigObj,'AlgebraicLoopMsg')
get_param(activeConfigObj,'MinStepSizeMsg')

get_param(activeConfigObj,'LoggingToFile')
get_param(activeConfigObj,'LoggingFileName')

get_param(activeConfigObj,'LoggingIntervals')
get_param(activeConfigObj,'SignalLogging')

%set_param(mdl,'SignalLogging','on')

%get_param(activeConfigObj,'-full')

% No existen por el momento
%{
get_param(activeConfigObj,'InitFcn')
get_param(activeConfigObj,'SimulationTime')
get_param(activeConfigObj,'InitialState')
%}

% new configuration
%{
newConfigObj = copy(activeConfigObj);
set_param(newConfigObj,'Name','ConfigCopy');
attachConfigSet(model, newConfigObj);
set_param(newConfigObj,'SolverType','Fixed-step');

setActiveConfigSet(model,'ConfigCopy');
activeConfigSet = getActiveConfigSet(model);
get_param(activeConfigSet,'Name')

set_param(referencedConfigObj,'SignalLogging','off');

set_param(referencedConfigObj,'StartTime','10');

%}

</code></pre>

<h2 id="ver-debajo-de-la-mascara-de-un-bloque-en-simulink">ver debajo de la mascara de un bloque en Simulink</h2>

<pre><code class="language-cmd">mdlsignals = find_system(gcs,'FindAll','on','LookUnderMasks','all',...
        'FollowLinks','on','type','line','SegmentType','trunk');
ph = get_param(mdlsignals,'SrcPortHandle')
for i=1: length(ph)
    get_param(ph{i},'datalogging')
end
</code></pre>

<h2 id="open-simulation-data-inspector-tool">open “Simulation Data Inspector TOOL”</h2>
<pre><code class="language-cmd">Simulink.sdi.view
</code></pre>

:ET
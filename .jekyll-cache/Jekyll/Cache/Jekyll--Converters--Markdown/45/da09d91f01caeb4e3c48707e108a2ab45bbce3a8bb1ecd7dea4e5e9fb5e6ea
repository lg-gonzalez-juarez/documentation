I"o<h2 id="about-syntax-highlighting">About syntax highlighting</h2>
<p>For syntax highlighting, use fenced code blocks optionally followed by the language syntax you want:</p>

<pre>
```java
import java.util.Scanner;

public class ScannerAndKeyboard
{

	public static void main(String[] args)
	{	Scanner s = new Scanner(System.in);
		System.out.print( "Enter your name: "  );
		String name = s.nextLine();
		System.out.println( "Hello " + name + "!" );
	}
}
```
</pre>

<p>This looks as follows:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ScannerAndKeyboard</span>
<span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
	<span class="o">{</span>	<span class="nc">Scanner</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span> <span class="s">"Enter your name: "</span>  <span class="o">);</span>
		<span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="s">"Hello "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">"!"</span> <span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Fenced code blocks require a blank line before and after.</p>

<p>If you’re using an HTML file, you can also use the <code class="language-plaintext highlighter-rouge">highlight</code> command with Liquid markup.</p>

<pre>
{% highlight java %}
import java.util.Scanner;

public class ScannerAndKeyboard
{

	public static void main(String[] args)
	{	Scanner s = new Scanner(System.in);
		System.out.print( "Enter your name: "  );
		String name = s.nextLine();
		System.out.println( "Hello " + name + "!" );
	}
}
{% endhighlight %}
</pre>

<p>Result:</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ScannerAndKeyboard</span>
<span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
	<span class="o">{</span>	<span class="nc">Scanner</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span> <span class="s">"Enter your name: "</span>  <span class="o">);</span>
		<span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span> <span class="s">"Hello "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">"!"</span> <span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p>The theme has syntax highlighting specified in the configuration file as follows:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>highlighter: rouge
</code></pre></div></div>

<p>The syntax highlighting is done via the css/syntax.css file.</p>

<h2 id="available-lexers">Available lexers</h2>

<p>The keywords you must add to specify the highlighting (in the previous example, <code class="language-plaintext highlighter-rouge">ruby</code>) are called “lexers.” You can search for “lexers.” Here are some common ones I use:</p>

<ul>
  <li>js</li>
  <li>html</li>
  <li>yaml</li>
  <li>css</li>
  <li>json</li>
  <li>php</li>
  <li>java</li>
  <li>cpp</li>
  <li>dotnet</li>
  <li>xml</li>
  <li>http</li>
</ul>

<p>[]:</p>

:ET
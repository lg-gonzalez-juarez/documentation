I"UE<h2 id="add-a-tag-to-a-page">Add a tag to a page</h2>
<p>You can add tags to pages by adding <code class="language-plaintext highlighter-rouge">tags</code> in the frontmatter with values inside brackets, like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
title: 5.0 Release Notes
permalink: release_notes_5_0.html
tags: [formatting, single_sourcing]
---
</code></pre></div></div>

<h2 id="tags-overview">Tags overview</h2>

<div class="alert alert-info" role="alert"><i class="fa fa-info-circle"></i> <b>Note:</b>  With posts, tags have a namespace that you can access with <code>posts.tags.tagname</code>, where <code>tagname</code> is the name of the tag. You can then list all posts in that tag namespace. But pages don’t off this same tag namespace, so you could actually use another key instead of <code>tags</code>. Nevertheless, I’m using the same <code>tags</code> approach for posts as with pages.</div>

<p>To prevent tags from getting out of control and inconsistent, first make sure the tag appears in the _data/tags.yml file. If it’s not there, the tag you add to a page won’t be read. I added this check just to make sure I’m using the same tags consistently and not adding new tags that don’t have tag archive pages.</p>

<div class="alert alert-info" role="alert"><i class="fa fa-info-circle"></i> <b>Note:</b> In contrast to WordPress, with Jekyll to get tags on pages you have to build out the functionality for tags so that clicking a tag name shows you all pages with that tag. Tags in Jekyll are much more manual.</div>

<p>Additionally, you must create a tag archive page similar to the other pages named tag_{tagname}.html folder. This theme doesn’t auto-create tag archive pages.</p>

<p>For simplicity, make all your tags single words (connect them with hyphens if necessary).</p>

<h2 id="setting-up-tags">Setting up tags</h2>

<p>Tags have a few components.</p>

<ol>
  <li>
    <p>In the _data/tags.yml file, add the tag names you want to allow. For example:</p>

    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">allowed-tags:</span><span class="w">
  </span><span class="err">-</span><span class="w"> </span><span class="err">getting_started</span><span class="w">
  </span><span class="err">-</span><span class="w"> </span><span class="err">overview</span><span class="w">
  </span><span class="err">-</span><span class="w"> </span><span class="err">formatting</span><span class="w">
  </span><span class="err">-</span><span class="w"> </span><span class="err">publishing</span><span class="w">
  </span><span class="err">-</span><span class="w"> </span><span class="err">single_sourcing</span><span class="w">
  </span><span class="err">-</span><span class="w"> </span><span class="err">special_layouts</span><span class="w">
  </span><span class="err">-</span><span class="w"> </span><span class="err">content</span><span class="w"> </span><span class="err">types</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li>
    <p>Create a tag archive file for each tag in your tags_doc.yml list. Name the file following the same pattern in the tags folder, like this: tag_collaboration.html.</p>

    <p>Each tag archive file needs only this:</p>

    <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
title: "Collaboration pages"
tagName: collaboration
search: exclude
permalink: tag_collaboration.html
sidebar: mydoc_sidebar
---
<span class="p">{%</span><span class="w"> </span><span class="nt">include</span><span class="w"> </span>taglogic.html<span class="w"> </span><span class="p">%}</span>
</code></pre></div>    </div>

    <div class="alert alert-info" role="alert"><i class="fa fa-info-circle"></i> <b>Note:</b> In the _includes/mydoc folder, there’s a taglogic.html file. This file (included in each tag archive file) has common logic for getting the tags and listing out the pages containing the tag in a table with summaries or truncated excerpts. You don’t have to do anything with the file — just leave it there because the tag archive pages reference it.</div>
  </li>
  <li>
    <p>Change the title, tagName, and permalink values to be specific to the tag name you just created.</p>

    <p>By default, the _layouts/page.html file will look for any tags on a page and insert them at the bottom of the page using this code:</p>
  </li>
</ol>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div class="tags"&gt;
<span class="p">{%</span><span class="w"> </span><span class="kr">if</span><span class="w"> </span><span class="nv">page</span><span class="p">.</span><span class="nv">tags</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="nv">null</span><span class="w"> </span><span class="p">%}</span>
&lt;b&gt;Tags: &lt;/b&gt;
<span class="p">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">projectTags</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">data</span><span class="p">.</span><span class="nv">tags</span><span class="p">.</span><span class="nv">allowed-tags</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">for</span><span class="w"> </span><span class="nv">tag</span><span class="w"> </span><span class="nt">in</span><span class="w"> </span><span class="nv">page.tags</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="kr">if</span><span class="w"> </span><span class="nv">projectTags</span><span class="w"> </span><span class="ow">contains</span><span class="w"> </span><span class="nv">tag</span><span class="w"> </span><span class="p">%}</span>
&lt;a href="<span class="p">{{</span><span class="w"> </span><span class="s2">"tag_"</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">append</span><span class="p">:</span><span class="w"> </span><span class="nv">tag</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">append</span><span class="p">:</span><span class="w"> </span><span class="s2">".html"</span><span class="w"> </span><span class="p">}}</span>" class="btn btn-default navbar-btn cursorNorm" role="button"&gt;<span class="p">{{</span><span class="nv">page</span><span class="p">.</span><span class="nv">tagName</span><span class="p">}}{{</span><span class="nv">tag</span><span class="p">}}</span>&lt;/a&gt;
<span class="p">{%</span><span class="w"> </span><span class="kr">endif</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">endfor</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="kr">endif</span><span class="w"> </span><span class="p">%}</span>
&lt;/div&gt;
</code></pre></div></div>

<p>Because this code appears on the _layouts/page.html file by default, you don’t need to do anything in your page to get the tags to appear. However, if you want to alter the placement or change the button color, you can do so within the _includes/taglogic.html file.</p>

<p>You can change the button color by changing the class on the button from <code class="language-plaintext highlighter-rouge">btn-info</code> to one of the other button classes bootstrap provides. See <a href="mydoc_labels.html">Labels</a> for more options on button class names.</p>

<h2 id="retrieving-pages-for-a-specific-tag">Retrieving pages for a specific tag</h2>

<p>If you want to retrieve pages outside of a particular tag_archive page, you could use this code:</p>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Getting started pages:
&lt;ul&gt;
<span class="p">{%</span><span class="w"> </span><span class="nt">for</span><span class="w"> </span><span class="nv">page</span><span class="w"> </span><span class="nt">in</span><span class="w"> </span><span class="nv">site.pages</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">for</span><span class="w"> </span><span class="nv">tag</span><span class="w"> </span><span class="nt">in</span><span class="w"> </span><span class="nv">page.tags</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="kr">if</span><span class="w"> </span><span class="nv">tag</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"getting_started"</span><span class="w"> </span><span class="p">%}</span>
&lt;li&gt;&lt;a href="<span class="p">{{</span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">remove</span><span class="p">:</span><span class="w"> </span><span class="s2">"/"</span><span class="w"> </span><span class="p">}}</span>"&gt;<span class="p">{{</span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="p">}}</span>&lt;/a&gt;&lt;/li&gt;
<span class="p">{%</span><span class="w"> </span><span class="kr">endif</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">endfor</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">endfor</span><span class="w"> </span><span class="p">%}</span>
&lt;/ul&gt;
</code></pre></div></div>

<p>Here’s how that code renders:</p>

<p>Getting started pages:</p>
<ul>



































































































































































































<li><a href="index.html">Index</a></li>







































































































<li><a href="mydoc_about.html">About the theme's author</a></li>





<li><a href="mydoc_about_ruby_gems_etc.html">About Ruby, Gems, Bundler, and other prerequisites</a></li>





























































<li><a href="getting_started.html">Getting started with the Documentation Theme for Jekyll</a></li>

































<li><a href="mydoc_install_jekyll_on_mac.html">Install Jekyll on Mac</a></li>































<li><a href="mydoc_pages.html">Pages</a></li>









<li><a href="mydoc_posts.html">Posts</a></li>















<li><a href="mydoc_release_notes_50.html">Release notes 5.0</a></li>





<li><a href="mydoc_release_notes_60.html">Release notes 6.0</a></li>



























<li><a href="mydoc_sidebar_navigation.html">Sidebar Navigation</a></li>









<li><a href="mydoc_support.html">Support</a></li>







<li><a href="mydoc_supported_features.html">Supported features</a></li>































































































































































































































































</ul>

<p>If you want to sort the pages alphabetically, you have to apply a <code class="language-plaintext highlighter-rouge">sort</code> filter:</p>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
Getting started pages:
&lt;ul&gt;
<span class="p">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">sorted_pages</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">pages</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">sort</span><span class="p">:</span><span class="w"> </span><span class="s1">'title'</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">for</span><span class="w"> </span><span class="nv">page</span><span class="w"> </span><span class="nt">in</span><span class="w"> </span><span class="nv">sorted_pages</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">for</span><span class="w"> </span><span class="nv">tag</span><span class="w"> </span><span class="nt">in</span><span class="w"> </span><span class="nv">page.tags</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="kr">if</span><span class="w"> </span><span class="nv">tag</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"getting_started"</span><span class="w"> </span><span class="p">%}</span>
&lt;li&gt;&lt;a href="<span class="p">{{</span><span class="nv">page</span><span class="p">.</span><span class="nv">url</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">remove</span><span class="p">:</span><span class="w"> </span><span class="s2">"/"</span><span class="w"> </span><span class="p">}}</span>"&gt;<span class="p">{{</span><span class="nv">page</span><span class="p">.</span><span class="nv">title</span><span class="p">}}</span>&lt;/a&gt;&lt;/li&gt;
<span class="p">{%</span><span class="w"> </span><span class="kr">endif</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">endfor</span><span class="w"> </span><span class="p">%}</span>
<span class="p">{%</span><span class="w"> </span><span class="nt">endfor</span><span class="w"> </span><span class="p">%}</span>
&lt;/ul&gt;

</code></pre></div></div>

<p>Here’s how that code renders:</p>

<p>Getting started pages:</p>
<ul>










































































































































































































































































































































































<li><a href="mydoc_about_ruby_gems_etc.html">About Ruby, Gems, Bundler, and other prerequisites</a></li>







<li><a href="mydoc_about.html">About the theme's author</a></li>















































































<li><a href="getting_started.html">Getting started with the Documentation Theme for Jekyll</a></li>































<li><a href="index.html">Index</a></li>





<li><a href="mydoc_install_jekyll_on_mac.html">Install Jekyll on Mac</a></li>































































<li><a href="mydoc_pages.html">Pages</a></li>









<li><a href="mydoc_posts.html">Posts</a></li>

































<li><a href="mydoc_release_notes_50.html">Release notes 5.0</a></li>





<li><a href="mydoc_release_notes_60.html">Release notes 6.0</a></li>













































<li><a href="mydoc_sidebar_navigation.html">Sidebar Navigation</a></li>













<li><a href="mydoc_support.html">Support</a></li>







<li><a href="mydoc_supported_features.html">Supported features</a></li>

































































































</ul>

<h2 id="efficiency">Efficiency</h2>
<p>Although the tag approach here uses <code class="language-plaintext highlighter-rouge">for</code> loops, these are somewhat inefficient on a large site. Most of my tech doc projects don’t have hundreds of pages (like my blog does). If your project does have hundreds of pages, this <code class="language-plaintext highlighter-rouge">for</code> loop approach with tags is going to slow down your build times.</p>

<p>Without the ability to access pages inside a universal namespace with the page type, there aren’t many workarounds here for faster looping.</p>

<p>With posts (instead of pages), since you can access just the posts inside <code class="language-plaintext highlighter-rouge">posts.tag.tagname</code>, you can be a lot more efficient with the looping.</p>

<p>Still, if the build times are getting long (e.g., 1 or 2 minutes per build), look into reducing the number of <code class="language-plaintext highlighter-rouge">for</code> loops on your site.</p>

<h2 id="empty-tags">Empty tags?</h2>

<p>If your page shows “tags:” at the bottom without any value, it could mean a couple of things:</p>

<ul>
  <li>You’re using a tag that isn’t specified in your allowed tags list in your tags.yml file.</li>
  <li>You have an empty <code class="language-plaintext highlighter-rouge">tags: []</code> property in your frontmatter.</li>
</ul>

<p>If you don’t want tags to appear at all on your page, remove the tags property from your frontmatter.</p>

<h2 id="remembering-the-right-tags">Remembering the right tags</h2>

<p>Since you may have many tags and find it difficult to remember what tags are allowed, I recommend creating a template that prepopulates all your frontmatter with all possible tags. Then just remove the tags that don’t apply.</p>

<p>See <a href="mydoc_webstorm_text_editor.html">WebStorm Text Editor</a> for tips on creating file templates in WebStorm.</p>

<p>[]:</p>

:ET